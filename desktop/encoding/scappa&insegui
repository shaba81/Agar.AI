
%Guess
insegui(B) | scappa(B) | ignora(B) :- blob(B,_,_,_).

%Non è possibile inseguire blob più grandi di te
:- insegui(B), blob(B,_,_,R1), actor(_,_,_,R2), R1>=R2.

%Predicato di supporto per memorizzare la differenza
%fra il tuo raggio e i raggi degli altri blob 
differenzaConLaPreda(B,D) :- actor(_,_,_,R1), blob(B,_,_,R2), D=R1-R2, D>0.

%Minimizza la differenza tra i raggi 
%(insegui il più grande fra quelli più piccoli di te)
:~ insegui(B), differenzaConLaPreda(B,D). [D@1,B]

%Minimizza la distanza tra te e l'obiettivo
:~ insegui(B), distance(B,D). [D@3,B]

%Non è possibile scappare da chi è più piccolo di te
:- scappa(B), blob(B,_,_,R1), actor(_,_,_,R2), R1<=R2.

%Predicato di supporto per trovare il blob con il raggio massimo 
blobMax(B,X) :- #max{R:blob(Y,_,_,R)} = X, blob(B,_,_,X).

%Massimizza il raggio del blob da cui scappare
%(scappa sempre da quello più grande)
:~ scappa(B), blob(B,_,_,R), blobMax(_,X), Y=X-R. [Y@2,B]

%Minimizza la distanza con il blob da cui scappare
%(scappa sempre da quello più vicino)
:~ scappa(B), distance(B,D). [D@3,B]

%Minimizza la distanza tra te e il bordo
%(Allontanati dal bordo più vicino)
allontanatiDalBordo(X) | nonAllontanartiDalBordo(X) :- bordo(X).
:~ allontanatiDalBordo(X), distanzaDalBordo(X, D). [D@3,X]

%Consiglia due possibili direzioni, in base al bordo da cui allontanarsi.
direzioneConsigliata("top") :- allontanatiDalBordo("right").
direzioneConsigliata("bottom") :- allontanatiDalBordo("right").
direzioneConsigliata("right") :- allontanatiDalBordo("top").
direzioneConsigliata("left") :- allontanatiDalBordo("top").
direzioneConsigliata("top") :- allontanatiDalBordo("left").
direzioneConsigliata("bottom") :- allontanatiDalBordo("left").
direzioneConsigliata("right") :- allontanatiDalBordo("bottom").
direzioneConsigliata("left") :- allontanatiDalBordo("bottom").

%Indica la miglior direzione in base alla distanza dal borso corrispondente
bordoPiuLontano(X) :- #max{D:distanzaDalBordo(B,D), direzioneConsigliata(B)} = MAXDIST, distanzaDalBordo(X,MAXDIST).

%E' possibile avere un solo obiettivo
:- #count{X:scappa(X)} = X1, #count{Y:insegui(Y)} = Y1, #count{W:allontanatiDalBordo(W)} = W1, K=X1+Y1+W1, K<>1.
